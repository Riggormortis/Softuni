using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

class Solution
{
    static void Main(String[] args)
    {
        const int passwordMinLenght = 6;
        const int passwordMaxLenght = 10;
        const int passwordMinCount = 2;

        string password = Console.ReadLine();

        //TODO Validate given password
        bool isPasswordValid = ValidatePassword(password, passwordMinLenght, passwordMaxLenght, passwordMinCount);

        //Print if it is valid
        if (isPasswordValid)
        {
            Console.WriteLine("Password is valid");
        }

    }
    /// <summary>
    /// the given method validates password. It prints any validation errors
    /// and return boolean whether the password is valid
   

    static bool ValidatePassword(string password, int passwordMinLenght, int passwordMaxLenght, int passwordMinCount)
    {
        
        bool isPasswordValid = true;
        if (!ValidatePasswordLenght(password, passwordMinLenght, passwordMaxLenght))
        {
            Console.WriteLine($"Password must be between {passwordMinLenght} and {passwordMaxLenght} characters");
            isPasswordValid = false;
        }

        if (!ValidatePasswordIsAphaNumerical(password))
        {
            Console.WriteLine("Password must consist only of letters and digits");
            isPasswordValid = false;
        }

        if (!ValidatePasswordDigitsMinCount(password, passwordMinCount))
        {
            Console.WriteLine($"Password must have at least {passwordMinCount} digits");
            isPasswordValid = false;
        }

        return isPasswordValid;
    }

    static bool ValidatePasswordLenght(string password, int minLenght, int maxLenght)
    {
        if (password.Length >= minLenght && password.Length <= maxLenght)
        {
            return true;
        }
       
        return false;
       
    }

    static bool ValidatePasswordIsAphaNumerical (string password)
    {
        foreach (char ch in password)
        {
            if (!Char.IsLetterOrDigit(ch))
            {
                return false;
            }
            
        }

        return true;
    }

    static bool ValidatePasswordDigitsMinCount(string password, int minDigitsCount)
    {
        int digitsCount = 0;
        foreach (char ch in password)
        {
            if (Char.IsDigit(ch))
            {
                digitsCount++;
            }
        }

        return digitsCount >= minDigitsCount;
    }

}