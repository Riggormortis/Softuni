using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;


public class Program
{
    public static void Main()
    {
        List<int> numbers = Console.ReadLine()
                .Split(' ', StringSplitOptions.RemoveEmptyEntries)
                .Select(int.Parse)
                .ToList();

        string command;
        while ((command = Console.ReadLine()) != "End")
        {
            string[] cmdArgs = command
                .Split(' ', StringSplitOptions.RemoveEmptyEntries)
                .ToArray();

            string cmdType = cmdArgs[0];

            if (cmdType == "Add")
            {
                int appendNumber = int.Parse(cmdArgs[1]);
                numbers.Add(appendNumber);
            }
            else if (cmdType == "Insert")
            {
                int insertNumber = int.Parse(cmdArgs[1]);
                int index = int.Parse(cmdArgs[2]);
                //pyrvi variant za proverka
                if (index < 0 || index >= numbers.Count)
                {
                    Console.WriteLine("Invalid index");
                    continue;
                }
                else
                {
                    numbers.Insert(index, insertNumber);
                }
                
            }
            else if (cmdType == "Remove")
            {
                int removeIndex = int.Parse(cmdArgs[1]);

                //vtori variant za proverka
                if (!IsIndexValid(numbers, removeIndex))
                {
                    Console.WriteLine("Invalid index");
                    continue;
                }
                else
                {
                    numbers.RemoveAt(removeIndex);
                }
            }
            else if (cmdType == "Shift")
            {
                string direction = cmdArgs[1];
                int count = int.Parse(cmdArgs[2]);
                

                if (direction == "left")
                {
                    ShiftLeft(numbers, count);
                }
                else if(direction == "right")
                {
                    ShiftRight(numbers, count);
                }

            }
           

        }

        Console.WriteLine(String.Join(" ", numbers));
  

    }

    static bool IsIndexValid(List<int> numbers, int index)
    {
        return index >= 0 && index < numbers.Count;
    }

    static void ShiftLeft(List<int> numbers, int count)
    {
        int realPerformedCount = count % numbers.Count;

        //Counter for shifts
        //Shifts count times
        for (int i = 1; i <= realPerformedCount; i++)
        {
            // int FirstElement = numbers[0];
            //take first element in order to not lose it's value
            int FirstElement = numbers.First();
            //we remove the first element
            numbers.Remove(FirstElement);
            //then we append the first element at last position
            numbers.Add(FirstElement);
        }
    }
    static void ShiftRight(List<int> numbers, int count)
    {
        int realPerformedCount = count % numbers.Count;

        for (int i = 1; i <= realPerformedCount; i++)
        {
            //Take the last element in order not to lose its value
            //int lastElement = numbers[numbers.Count - 1];
            int lastElement = numbers.Last();
            //We remove the last element
            // numbers.Remove(lastElement); <= In some cases this might not work
            numbers.RemoveAt(numbers.Count - 1);
            //we insert it in the start of the list
            numbers.Insert(0, lastElement);
        }
    }


   

   
}
